name: Run Code Tests

on:
  push:
    paths:
      - "solutions/**"
  pull_request:
    paths:
      - "tests/**"

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y gcc g++ openjdk-17-jdk python3 python3-pip
          pip install pytest

      - name: Detect Changed Files
        id: changed-files
        run: |
          BEFORE_COMMIT="${{ github.event.before }}"
          if [ -z "$BEFORE_COMMIT" ] || ! git cat-file -e "$BEFORE_COMMIT"^{commit}; then
            BEFORE_COMMIT=$(git rev-parse HEAD~1)
          fi

          CHANGED_FILES=$(git diff --name-only "$BEFORE_COMMIT" HEAD)
          echo "Detected changed files: $CHANGED_FILES"

          if [ -z "$CHANGED_FILES" ]; then
            echo "No file changes detected. Exiting..."
            exit 1
          fi

          echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV

      - name: Determine File Type
        run: |
          if echo "$CHANGED_FILES" | grep -qE 'solutions/.*\.c$'; then
            echo "language=C" >> $GITHUB_ENV
          elif echo "$CHANGED_FILES" | grep -qE 'solutions/.*\.cpp$'; then
            echo "language=C++" >> $GITHUB_ENV
          elif echo "$CHANGED_FILES" | grep -qE 'solutions/.*\.py$'; then
            echo "language=Python" >> $GITHUB_ENV
          elif echo "$CHANGED_FILES" | grep -qE 'solutions/.*\.java$'; then
            echo "language=Java" >> $GITHUB_ENV
          else
            echo "No relevant file changes detected. Exiting..."
            exit 1

      - name: Compile and Run C Program
        if: env.language == 'C'
        run: |
          if [ -f "tests/test.c" ]; then
            gcc -o c_test tests/test.c solutions/*.c && ./c_test
          else
            echo "No C test file found. Skipping."
          fi

      - name: Compile and Run C++ Program
        if: env.language == 'C++'
        run: |
          if [ -f "tests/test.cpp" ]; then
            g++ -o cpp_test tests/test.cpp solutions/*.cpp && ./cpp_test
          else
            echo "No C++ test file found. Skipping."
          fi

      - name: Run Python Tests
        if: env.language == 'Python'
        run: |
          if [ -f "tests/test.py" ]; then
            pytest tests/test.py
          else
            echo "No Python test file found. Skipping."
          fi

      - name: Compile and Run Java Program
        if: env.language == 'Java'
        run: |
          if [ -f "tests/Test.java" ]; then
            javac -d . solutions/*.java tests/*.java
            java tests.Test
          else
            echo "No Java test file found. Skipping."
          fi
